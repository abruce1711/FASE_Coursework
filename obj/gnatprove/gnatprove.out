Summary of SPARK analysis
=========================

---------------------------------------------------------------------------------------------------------
SPARK Analysis results        Total        Flow   Interval   CodePeer      Provers   Justified   Unproved
---------------------------------------------------------------------------------------------------------
Data Dependencies                13          13          .          .            .           .          .
Flow Dependencies                 .           .          .          .            .           .          .
Initialization                    6           6          .          .            .           .          .
Non-Aliasing                      .           .          .          .            .           .          .
Run-time Checks                  23           .          .          .    23 (CVC4)           .          .
Assertions                        .           .          .          .            .           .          .
Functional Contracts             12           .          .          .    12 (CVC4)           .          .
LSP Verification                  .           .          .          .            .           .          .
---------------------------------------------------------------------------------------------------------
Total                            54    19 (35%)          .          .     35 (65%)           .          .


max steps used for successful proof: 1

Analyzed 3 units
in unit main, 0 subprograms and packages out of 1 analyzed
  Main at main.adb:5 skipped
in unit reactor, 12 subprograms and packages out of 12 analyzed
  Reactor at reactor.ads:2 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Reactor.ReactorCheck at reactor.ads:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Reactor.ReactorOn at reactor.ads:25 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Reactor.addControlRod at reactor.ads:43 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (6 checks)
  Reactor.decreaseTemperature at reactor.ads:53 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (4 checks)
  Reactor.decreaseWaterSupply at reactor.ads:63 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
  Reactor.fillWaterSupply at reactor.ads:68 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  Reactor.increaseElectricity at reactor.ads:58 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
  Reactor.increaseTemperature at reactor.ads:48 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
  Reactor.removeControlRod at reactor.ads:38 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (6 checks)
  Reactor.startReactor at reactor.ads:28 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (3 checks)
  Reactor.stopReactor at reactor.ads:33 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
in unit train, 6 subprograms and packages out of 6 analyzed
  Train at train.ads:2 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Train.TrainStopped at train.ads:11 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Train.addCarriage at train.ads:14 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (3 checks)
  Train.decreaseSpeed at train.ads:29 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
  Train.increaseSpeed at train.ads:24 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Train.removeCarriage at train.ads:19 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (3 checks)
